{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { FormMessageContainer } from \"../FormMessageContainer\";\nimport { TextArea } from \"./TextArea\";\n/**\n * This component is a simple wrapper for the `TextArea` and `FormMessage`\n * components that should be used along with the `useTextField` hook to\n * conditionally show help and error messages with a `TextArea`.\n *\n * Simple example:\n *\n * ```ts\n * const [value, areaProps] = useTextField({\n *   id: \"area-id\",\n * });\n *\n * return (\n *   <TextFieldWithMessage\n *     label=\"Label\"\n *     placeholder=\"Placeholder\"\n *     {...areaProps}\n *   />\n * );\n * ```\n *\n * @remarks \\@since 2.5.0\n */\nexport var TextAreaWithMessage = forwardRef(function TextAreaWithMessage(_a, ref) {\n  var messageProps = _a.messageProps,\n    messageContainerProps = _a.messageContainerProps,\n    props = __rest(_a, [\"messageProps\", \"messageContainerProps\"]);\n  return _jsx(FormMessageContainer, __assign({}, messageContainerProps, {\n    messageProps: messageProps\n  }, {\n    children: _jsx(TextArea, __assign({}, props, {\n      ref: ref\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAGlC,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,SAASC,QAAQ,QAAQ,YAAY;AAQrC;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMC,mBAAmB,GAAGH,UAAU,CAG3C,SAASG,mBAAmB,CAC5BC,EAAiD,EACjDC,GAAG;EADD,gBAAY;IAAEC,qBAAqB;IAAKC,KAAK,cAA/C,yCAAiD,CAAF;EAG/C,OACEC,KAACP,oBAAoB,eACfK,qBAAqB;IACzBG,YAAY,EAAEA;EAAY;IAAAC,UAE1BF,KAACN,QAAQ,eAAKK,KAAK;MAAEF,GAAG,EAAEA;IAAG;EAAI,GACZ;AAE3B,CAAC,CAAC","names":["forwardRef","FormMessageContainer","TextArea","TextAreaWithMessage","_a","ref","messageContainerProps","props","_jsx","messageProps","children"],"sources":["../../src/text-field/TextAreaWithMessage.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}